---

layout: post
title: '아파치(Apache)와 톰캣(Tomcat)'
subtitle: '아파치(Apache)와 톰캣(Tomcat)'
categories: devlog
tags: server
comments: true

---

# 아파치와 톰캣

![image](https://user-images.githubusercontent.com/60701130/154409589-253b5174-a481-48b1-9afc-b77a85ffcbf0.png)

## 아파치(Apache)
- 설치한 컴퓨터를 웹 서버로 만들어주는 역할
- 외부에서 랜선을 타고 HTTP 프로토콜을 이용한 호출 신호가 들어오면 아파치 설정에 따라 웹 페이지를 전송해주는 일을 주로 하는 프로그램
- 이미지나 단순 html파일 같은 `정적인 데이터를 처리`
- 아파치, IIS, Nginx같은 웹서버는 JSP나 PHP같은 응용 프로그래밍 언어를 해석할 수 없다 

	=> Java 기반 서버 사이드 언어를 처리할 수 있는 엔진을 개발함 -> WAS(Web Application Server)인 Tomcat 탄생

## 톰캣(Tomcat)

 - 톰캣은 'WAS(Web Application Server)'라고 해서 자바코드를 이용해 HTML페이지를 동적으로 생성해주는 프로그램
 - WAS는 웹서버와 웹 컨테이너의 결합으로 다양한 기능을 컨테이너에 구현하여 다양한 역할을 수행할 수 있는 서버
 - 클라이언트의 요청이 있을 때 내부의 프로그램을 통해 결과를 만들어내고 이것을 다시 클라이언트에 전달해주는 역할을 하는 것이 웹 컨테이너
 - 아파치와 톰캣은 컨테이너 기능이 가능하냐 하지 않느냐의 차이( 톰캣 6버전 이상부터는 조금씩 웹서버의 기능이 추가돼서)


```
톰캣은 5.5부터 Httpd의 native 모듈을 사용해서 스태틱 파일을 처리하는 기능을 제공한다.  
이 경우 Httpd와 톰캣이 같은 모듈을 사용하는 셈이니 성능에서 차이가 날 이유가 없다. 실제 테스트 한 결과를 봐도 톰캣에서 아파치 Native 모듈을 사용하는 것이 순수하게 아파치 Httpd만 사용하는 것과 비교해서 성능이 전혀 떨어지지 않는다.
```

따라서 단지 스태틱 파일 처리의 성능만을 위해서라면 굳이 톰캣 앞에 Apache Httpd를 두는 것은 불필요하다. 오히려 메모리만 많이 먹고, 관리부담은 커지고, 불필요한 부하만 걸릴 뿐이다.


### 아파치와 톰캣을 같이 써야만 하는 경우


1. 보안 강화 (Apache에서 해킹을 당하여도 WAS 에서는 정상 작동)

2. 로드밸런싱 (특정서버에서 에러/과부화가 발생하였을경우 다른 서버에서 정상적으로 서비스하기 위함)

3. 하나의 Apache (웹서버) 에서 다른언어의 어플리케이션을 함께 사용할때

4. Apache Httpd의 다른 기능이나 모듈을 사용해야 할때 

요약

```아파치``` - 정적인 데이터를 처리, 이미지나 단순 html파일을 아파치를 통해 처리하면 WAS보다 빠르고 안정적

```톰캣(WAS)``` - 동적인 데이터를 처리, DB와 연결되어 데이터를 주고 받거나 프로그램으로 데이터 조작이 필요한 경우에 사용

